prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions(),
#                 #radius = ~ifelse(Description == "Place1", 26, 10),
#                 radius = ~sqrt(Size),
#                 stroke = FALSE, fillOpacity = 0.5) %>%
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
clusterOptions = markerClusterOptions(),
#radius = ~ifelse(Description == "Place1", 26, 10),
radius = ~sqrt(Size),
stroke = FALSE, fillOpacity = 0.5)
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
clusterOptions = markerClusterOptions(),
radius = ~ifelse(Description == "Place1", 26, 10),
#radius = ~sqrt(Size),
stroke = FALSE, fillOpacity = 0.5)
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2") %>%
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1)
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
addRectangles(
lng1=-76.5929798, lat1=39.2973166,
lng2=-76.6206598, lat2=39.3288851,
fillColor = "transparent")
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
addRectangles(
lng1=-76.5929798, lat1=39.2973166,
lng2=-76.6206598, lat2=39.3288851,
fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = FALSE))
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
addRectangles(
lng1=-76.5929798, lat1=39.2973166,
lng2=-76.6206598, lat2=39.3288851,
fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE))
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
addRectangles(
lng1=-76.5929798, lat1=39.2973166,
lng2=-76.6206598, lat2=39.3288851,
fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE))
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)")))
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
addRectangles(
lng1=-76.5929798, lat1=39.2973166,
lng2=-76.6206598, lat2=39.3288851,
fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)")))
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
#addRectangles(
#    lng1=-76.5929798, lat1=39.2973166,
#    lng2=-76.6206598, lat2=39.3288851,
#    fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)")))
addPolygons(data = df2, lng = ~lng, lat = ~lat,
fill = F, weight = 2, color = "red", group = "Outline")
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
#addRectangles(
#    lng1=-76.5929798, lat1=39.2973166,
#    lng2=-76.6206598, lat2=39.3288851,
#    fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)"))) %>%
addPolygons(data = df2, lng = ~lng, lat = ~lat,
fill = F, weight = 2, color = "red", group = "Outline")
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
#addRectangles(
#    lng1=-76.5929798, lat1=39.2973166,
#    lng2=-76.6206598, lat2=39.3288851,
#    fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)"))) %>%
addPolygons(data = df2, lng = ~lng, lat = ~lat,
fill = F, weight = 2, color = "red", group = "Outline") %>%
# Layers control
addLayersControl(
baseGroups = c("MtbMAP", "Tonerlines", "TonerLabels"),
overlayGroups = c("df2", "Outline"),
options = layersControlOptions(collapsed = FALSE)
)
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
#addRectangles(
#    lng1=-76.5929798, lat1=39.2973166,
#    lng2=-76.6206598, lat2=39.3288851,
#    fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)"))) %>%
addPolygons(data = df2, lng = ~lng, lat = ~lat,
fill = F, weight = 2, color = "red", group = "Outline") %>%
# Layers control
addLayersControl(
baseGroups = c("MtbMAP", "Tonerlines", "TonerLabels"),
overlayGroups = c("df2", "Outline"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMeasure(position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479")
prepare_map
prepare_map <-  df2 %>% leaflet() %>%
#  addTiles() %>%
#setView(lng = -76.5929798, lat = 39.2973166, zoom = 12)  %>%
addProviderTiles(providers$MtbMap, group = 'MtbMAP')   %>%
addProviderTiles(providers$Stamen.TonerLines,
options = providerTileOptions(opacity = 0.35), group = 'Tonerlines')   %>%
addProviderTiles(providers$Stamen.TonerLabels,group = 'TonerLabels')  %>%
addMarkers(lat=df2$lat, lng= df2$lng, popup=df2$Description,
clusterOptions = markerClusterOptions())  %>%
addLabelOnlyMarkers(~lng, ~lat, label =  df2$Description,
labelOptions = labelOptions(noHide = T,                                      direction = 'top',textOnly = T)) %>%
#addCircleMarkers(color= "red", lat=~lat, lng= ~lng,
#                 clusterOptions = markerClusterOptions())
#addCircleMarkers(color= ~pallete(Description), lat=~lat, lng= ~lng,
#                  clusterOptions = markerClusterOptions(),
#                   radius = ~ifelse(Description == "Place1", 26, 10),
#                   #radius = ~sqrt(Size),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
addCircles(lng = ~lng, lat = ~lat, weight = 1,
popup = ~Description, radius = ~sqrt(Size)*15,
color = ~Contpallete(Size), fillOpacity = 1, group = "df2")%>%
addLegend("bottomright", pal = Contpallete, values = ~Size,
title = "Size", opacity = 1) %>%
#addRectangles(
#    lng1=-76.5929798, lat1=39.2973166,
#    lng2=-76.6206598, lat2=39.3288851,
#    fillColor = "transparent") %>%
addPopups(lng=-76.61289, lat=39.29793, content,
options = popupOptions(closeButton = TRUE)) %>%
addMarkers(lng = -76.61289, lat = 39.29793,
label = "Label with custom style",
labelOptions = labelOptions(noHide = T, direction = "bottom",
style = list("color" = "red","font-family" = "serif","font-style" = "italic","box-shadow" = "3px 3px rgba(0,0,0,0.25)","font-size" = "15px","border-color" = "rgba(0,0,0,0.5)"))) %>%
addPolygons(data = df2, lng = ~lng, lat = ~lat,
fill = F, weight = 2, color = "red", group = "Outline") %>%
# Layers control
addLayersControl(
baseGroups = c("MtbMAP", "Tonerlines", "TonerLabels"),
overlayGroups = c("df2", "Outline"),
options = layersControlOptions(collapsed = FALSE)
) %>%
addMeasure(position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
addMiniMap(
tiles = providers$Esri.WorldStreetMap,
toggleDisplay = TRUE) %>% addScaleBar()
prepare_map
```{r echo = FALSE}
install.packages("leaflet")
```
knit_with_parameters('F:/FINAL_CODES/R_Codes/LeafletPlot/intro.Rmd')
unlink('F:/FINAL_CODES/R_Codes/LeafletPlot/intro_cache', recursive = TRUE)
shiny::runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
library(readtext)
runApp('F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona')
rawText <- readtext('proteomiclinks.md') # get raw text
setwd("F:/FINAL_CODES/R_Codes/Corona/ShinyApp/Corona")
rawText <- readtext('proteomiclinks.md') # get raw text
rawText <- readtext('proteomiclinks.txt') # get raw text
rawText
runApp()
runApp()
